#!/usr/bin/env node

var curlshell = require("../lib/curlshell.js");
var fs = require("fs");
var path = require("path");
var Hjson = require("hjson");

var args = {},
  argv = [];
process.argv.slice(2).forEach(function(x) {
  if (x[0] === "-") {
    var i = x.indexOf("=");
    args[x.substr(1, i > 0 ? i - 1 : undefined)] = i > 0 ? x.substr(i + 1) : true;
  } else argv.push(x);
});

function help() {
  console.error("usage: curlshell [OPTIONS] CONFIG.hjson");
  console.error();
  console.error("curlshell runs a HTTP server that serves predefined shell commands to curl.");
  console.error();
  console.error("Initialize");
  console.error("  -init        create/initialize the config file");
  console.error("               e.g. curlshell -init > CONFIG.hjson");
  console.error();
  console.error("Server");
  console.error("  -port=NUM    the port to listen for requests (overrides the config).");
  console.error();
  console.error();
  return 0;
}

if (args["-help"] || args["-?"] || args["?"] || args.h) return help();

if (args.init) {
  var text = fs.readFileSync(path.join(__dirname, "../template.hjson"), "utf8");
  console.log(text);
  return 0;
}

if (argv.length === 0) return help();

var base = path.dirname(argv[0]);
var text = fs.readFileSync(argv[0], "utf8");
var config = Hjson.parse(text);

if (args.port) config.port = parseInt(args.port);

curlshell.status = console.log;
curlshell.start(config, base);

process.on("SIGTERM", function() {
  process.exit(0);
});
